  ***   Warning: new stack size = 100000000 (95.367 Mbytes).
contains nfabs: 1
[[x^4 + x^3 + x^2 + x + 1, [[1], 1], [Mat(125), 5], 1, [], [], [[1, x, x^2, 
x^3], [1, 1, 1, 1]], [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], 1, [y
, [1, 0], 1, 1, [Mat(1), Mat(1), Mat(1), Mat(1), 1, Mat(1), [1, 0], []], [0.
E-57], [1], Mat(1), Mat(1)], [x^4 + x^3 + x^2 + x + 1, 0, -1, y, x^4 + x^3 +
 x^2 + x + 1], [0]], [x^2, -x^3 - x^2 - x - 1, x^3], Mod(3, y), Vecsmall([0]
), [[[3, [3]~, 1, 1, 1], [5, [5]~, 1, 1, 1]], Vecsmall([3, 1])], 0, [1, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
, [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 1], [[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 
0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, -1, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 
0, 0, -1, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, -1, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0], [0, 0, -1, 1, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0
, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 
0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,
 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 1, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 1, -1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -
1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, -1; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 1, 0, -1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1], [
0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 1, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, -1
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, -1, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 1, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, -1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 3, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3; 1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -
3, 3, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3; 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, -3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, -3, 0,
 0; 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0, -1, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -1, 1, 0, 
0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0,
 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 1, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0,
 0, -3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, -3; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 3, -3; 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, -1, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 0, 1, 0, 0, 0
, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0,
 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0,
 0, 3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0; 0, -1, 1, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, -1, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, -1, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 3, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0; 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, -3, 
3, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 0, 0, -3, 0, 0, 3, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0,
 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 -3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, -3, 0, 0; 0, 0, 0, -1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0; 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, -1, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, -1, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0,
 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -3
, 0, 3, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 3, -3, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, -3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, -3; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, -3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 3, -3; 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 
-3, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, -3, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 -3, 0, 3, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 3; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0; 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0; 0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, -1
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,
 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 
0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 3, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 3; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0
, -3, 3, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 
0, 0; 0, 0, 0, 0, 3, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 3, -3,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -3
, 0, 0, 3, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0; 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, -3, 0, 3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0; 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 3, -3, 0, 0; 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, -1, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0], [0, 0, 0, 0, -3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -3, 0
, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, -3, 3, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0, 0, 0, 0; 
0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 3, 
-3, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3; 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, -3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 3, 0, -3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, -3; 0, 0, -1, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, -1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 3, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 3, 
0, -3, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 3, -3, 0, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, -3, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, -3, 0, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 3, -3, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, -3, 3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0; 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, -3, 0, 0, 0; 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 1
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 0, [16, -4, -4
, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
Suite: all
Suite: get
degree: 1
center: 1
splitting: 1
automorphism: 1
b: 1
trivial hasse invariants: 1
charac: 1
dim: 1
absdim: 1
basis: 1
invbasis: 1
basis*invbasis: 1
iscyclic: 1
radical: 1
Suite: operations
radical: 1
addition: 1
negation: 1
soustraction: 1
multiplication: 1
non-commutativity: 0
left division: 1
right division: 1
noncommutative left division: 1
noncommutative right division: 1
division by non-invertible: error("impossible inverse in algdivl: [Mod(Mod(-
1, i^2 + 1)*s, s^2 + 2), Mod(Mod(i - 1, i^2 + 1), s^2 + 2)]~.")
nilpotent: 1
square: 1
square j: 1
inverse: 1
powers: 1
negative powers: 1
multiplication table j: 1
multiplication table: 1
characteristic polynomial: 1
characteristic polynomial j: 1
trace zero: 1
trace commutator: 1
trace: 1
norm zero: 1
norm one: 1
norm j: 1
norm is multiplicative a*b: 1
norm is multiplicative b*a: 1
poleval: 1
poleval b: 1
Suite: hasse sum to 0
cyclo construction: [[x^2 + x + 1, [[1], 1], [Mat(3), -3], 1, [], [], [[1, x
], [1, 1]], [1, 0; 0, 1], 1, [y, [1, 0], 1, 1, [Mat(1), Mat(1), Mat(1), Mat(
1), 1, Mat(1), [1, 0], []], [0.E-57], [1], Mat(1), Mat(1)], [x^2 + x + 1, 0,
 -1, y, x^2 + x + 1], [[x^2 + x + 1, [0, 1], -3, 1, [Mat([1, -0.500000000000
00000000000000000000000000 + 0.86602540378443864676372317075293618347*I]), [
1, 0.36602540378443864676372317075293618347; 1, -1.3660254037844386467637231
707529361835], [1, 0; 1, -1], [2, -1; -1, -1], [3, 2; 0, 1], [1, -1; -1, -2]
, [3, [2, -1; 1, 1]], []], [-0.50000000000000000000000000000000000000 + 0.86
602540378443864676372317075293618347*I], [1, x], [1, 0; 0, 1], [1, 0, 0, -1;
 0, 1, 1, -1]]]], [-x - 1], Mod(-175624635, y), Vecsmall([1]), [[[5, [5]~, 1
, 1, 1], [11708309, [11708309]~, 1, 1, 1], [3, [3]~, 1, 1, 1]], Vecsmall([1,
 1, 1])], 0, [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 2/3; 0, 0, 0, 1/3], [1, 0, 0,
 0; 0, 1, 0, 0; 0, 0, 1, -2; 0, 0, 0, 3], [[1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1,
 0; 0, 0, 0, 1], [0, -1, 0, 0; 1, -1, 0, 0; 0, 0, 1, 1; 0, 0, -3, -2], [0, 0
, -175624635, -117083090; 0, 0, 0, -58541545; 1, -2, 0, 0; 0, 3, 0, 0], [0, 
0, -58541545, -58541545; 0, 0, 58541545, 0; 0, -1, 0, 0; 1, 1, 0, 0]], 0, [4
, -2, 0, 0]]
cyclo ramified at infinity: 1
cyclo unramified at infinity: 1
cyclo 5: 1
cyclo 5 bis: 1
cyclo 7 bis no mo: 1
cyclo 11 no mo: 1
quat -1,-1 over Q: 1
quat -1,-1 over Q(sqrt(2)): 1
quat -1,-1 over Q(sqrt(60)): 1
Suite: compositum of relative extensions
compositum of degrees 2 and 3 over quadratic field: 1
compositum of degrees 2 and 4 over quadratic field: 1
compositum of degrees 5 and 7 over quadratic field: 1
compositum of degrees 2 and 3 over degree 5 field: 1
compositum of degrees 2 and 4 over degree 5 field: 1
compositum of degrees 5 and 4 over degree 5 field: 1
Suite: tensor product of cyclic algebras
radical 1: 1
radical 2: 1
radical 3: 1
tensor of degree 2 and 3 no mo: 1
Suite: Grunwald-Wang
A quadratic over Q, 2 large inert, imaginary: 1
A quartic over Q, 2 large inert, imaginary: error("sorry, nfgrunwaldwang for
 non-prime degree is not yet implemented.")
A : degree 4 over Q(i), local degrees [4,1,1]: 1
A degree 3 over Q(j), local degrees [3,3] larger primes: 1
A : degree 3 over Q(sqrt(5)), local degrees [3,3] [0,0], larger primes: 1
A : degree 5 over Q(sqrt(7)), local degrees [5,5,5,5,5,5,5] [0,0]: 1
A : degree 9 over Q(zeta_9), local degrees [9,9,9,9]: 1
A degree 2 over totally real sextic, local degrees [2,2] [2,2,2,2,2,2], larg
er primes: 1
A degree 2 over totally real sextic, local degrees [] [2,2,2,2,2,2]: 1
Suite: algebra from Hasse invariants
matrix algebra invariants: 1
algebra 1 invariants: 1
algebra 2 invariants: 1
test: [[J^2 + 8, [[1], 1], [Mat(8), -2], Mat(2), [], [], [[1, J], [1, Mat(1/
2)]], [1, 0; 0, 1], 2, [y, [1, 0], 1, 1, [Mat(1), Mat(1), Mat(1), Mat(1), 1,
 Mat(1), [1, 0], []], [0.E-57], [1], Mat(1), Mat(1)], [J^2 + 8, 0, -1, y, J^
2 + 8], [[J^2 + 8, [0, 1], -8, 2, [Mat([1, 0.E-77 + 1.4142135623730950488016
887242096980786*I]), [1, 1.4142135623730950488016887242096980786; 1, -1.4142
135623730950488016887242096980786], [1, 1; 1, -1], [2, 0; 0, -4], [4, 0; 0, 
2], [2, 0; 0, -1], [2, [0, -2; 1, 0]], []], [0.E-77 + 2.82842712474619009760
33774484193961571*I], [1, 1/2*J], [1, 0; 0, 2], [1, 0, 0, -2; 0, 1, 1, 0]]]]
, [-J], Mod(-39, y), Vecsmall([1]), [[[13, [13]~, 1, 1, 1], [2, [2]~, 1, 1, 
1], [3, [3]~, 1, 1, 1]], Vecsmall([1, 0, 0])], 0, [1, 0, 1/2, 1/2; 0, 1, 0, 
1/4; 0, 0, 1/2, 1/6; 0, 0, 0, 1/12], [1, 0, -1, -4; 0, 1, 0, -3; 0, 0, 2, -4
; 0, 0, 0, 12], [[1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [0, -2, 2
, 0; 1, 0, 2, 1; 0, 0, 2, 1; 0, 0, -6, -2], [0, -2, -10, -4; 0, -1, 0, -2; 1
, -2, 1, 0; 0, 6, 0, 2], [0, -1, -3, -2; 0, 0, 2, 0; 0, -1, 1, 0; 1, 2, -1, 
1]], 0, [4, 0, 2, 2]]
degree 6 algebra over Q: 1
trivial finite conditions: [Vecsmall([1, 1]), [[[3, [3, 0]~, 1, 2, 1], [5, [
1, 2]~, 2, 1, [1, 2; 2, -1]]], Vecsmall([0, 0])]]
Suite: more operations
construct algebra: [[x^3 - 21*x + 7, [[1], 1], [Mat(49), 1], Mat(27), [], []
, [[1, x + 1, x^2 - x - 2], [1, 1/3, Mat(1/9)]], [1, -1, 1; 0, 1, 1; 0, 0, 1
], 27, [y, [1, 0], 1, 1, [Mat(1), Mat(1), Mat(1), Mat(1), 1, Mat(1), [1, 0],
 []], [0.E-57], [1], Mat(1), Mat(1)], [x^3 - 21*x + 7, 0, -1, y, x^3 - 21*x 
+ 7], [[x^3 - 21*x + 7, [3, 0], 49, 27, [[1, -1.2469796037174670610500097680
084796213, 1.8019377358048382524722046390148901023; 1, 0.4450418679126288085
7780512899358951893, -1.2469796037174670610500097680084796213; 1, 1.80193773
58048382524722046390148901023, 0.44504186791262880857780512899358951893], [1
, -1.2469796037174670610500097680084796213, 1.801937735804838252472204639014
8901023; 1, 0.44504186791262880857780512899358951893, -1.2469796037174670610
500097680084796213; 1, 1.8019377358048382524722046390148901023, 0.4450418679
1262880857780512899358951893], [1, -1, 2; 1, 0, -1; 1, 2, 0], [3, 1, 1; 1, 5
, -2; 1, -2, 5], [7, 0, 5; 0, 7, 5; 0, 0, 1], [3, -1, -1; -1, 2, 1; -1, 1, 2
], [7, [2, 1, -1; 1, 3, 1; 0, 1, 2]], []], [-4.74093881115240118315002930402
54388638, 0.33512560373788642573341538698076855680, 4.4058132074145147574166
139170446703070], [1, 1/3*x + 1/3, 1/9*x^2 - 1/9*x - 11/9], [1, -1, 10; 0, 3
, 3; 0, 0, 9], [1, 0, 0, 0, 1, -1, 0, -1, 2; 0, 1, 0, 1, 1, 1, 0, 1, -1; 0, 
0, 1, 0, 1, 0, 1, 0, 0]]]], [-1/3*x^2 - 2/3*x + 14/3, 1/3*x^2 - 1/3*x - 14/3
], Mod(-6, y), Vecsmall([0]), [[[2, [2]~, 1, 1, 1], [3, [3]~, 1, 1, 1], [7, 
[7]~, 1, 1, 1]], Vecsmall([1, 2, 0])], 0, [1, 0, 0, 0, 0, 1/7, 0, 2/7, 5/7; 
0, 1, 0, 0, 0, 1/7, 0, 1/7, 5/7; 0, 0, 1, 0, 0, 3/7, 0, 0, 1/7; 0, 0, 0, 1, 
0, 5/7, 0, 2/7, 5/7; 0, 0, 0, 0, 1, 5/7, 0, 1/7, 5/7; 0, 0, 0, 0, 0, 1/7, 0,
 0, 1/7; 0, 0, 0, 0, 0, 0, 1, 2/7, 5/7; 0, 0, 0, 0, 0, 0, 0, 1/7, 5/7; 0, 0,
 0, 0, 0, 0, 0, 0, 1/7], [1, 0, 0, 0, 0, -1, 0, -2, 6; 0, 1, 0, 0, 0, -1, 0,
 -1, 1; 0, 0, 1, 0, 0, -3, 0, 0, 2; 0, 0, 0, 1, 0, -5, 0, -2, 10; 0, 0, 0, 0
, 1, -5, 0, -1, 5; 0, 0, 0, 0, 0, 7, 0, 0, -7; 0, 0, 0, 0, 0, 0, 1, -2, 5; 0
, 0, 0, 0, 0, 0, 0, 7, -35; 0, 0, 0, 0, 0, 0, 0, 0, 7], [[1, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1], [0
, 1, -1, 1, 1, 1, 6, 2, 5; 1, 1, 1, 1, 1, 2, 1, 1, 3; 0, 1, 0, 3, 3, 4, 2, 2
, 6; 0, 0, 0, 6, 5, 7, 10, 5, 13; 0, 0, 0, 4, 4, 5, 5, 3, 8; 0, 0, 0, -7, -7
, -9, -7, -5, -14; 0, 0, 0, 0, 0, 0, 5, 1, 2; 0, 0, 0, 0, 0, 0, -35, -9, -21
; 0, 0, 0, 0, 0, 0, 7, 2, 5], [0, -1, 2, 0, -1, 0, -4, -2, -6; 0, 1, -1, 0, 
-1, -1, 0, 0, 0; 1, 0, 0, 0, -3, -2, -2, -1, -4; 0, 0, 0, 0, -4, -3, -8, -4,
 -13; 0, 0, 0, 1, -4, -2, -4, -2, -7; 0, 0, 0, 0, 7, 5, 7, 4, 14; 0, 0, 0, 0
, 0, 0, -2, -1, -3; 0, 0, 0, 0, 0, 0, 28, 12, 35; 0, 0, 0, 0, 0, 0, -7, -3, 
-9], [0, 0, -1, 0, -2, -1, -6, -2, -5; 0, 0, -1, 0, -1, -1, 0, -1, -5; 0, 0,
 -3, 0, 0, -1, 0, 0, -1; 1, 0, -5, 0, -2, -2, 0, 0, 0; 0, 1, -5, 0, -1, -2, 
0, 0, 0; 0, 0, 7, 0, 0, 2, 0, 0, 0; 0, 0, 0, 1, -2, 0, 0, 0, 0; 0, 0, 0, 0, 
7, 0, 0, 1, 0; 0, 0, 0, 0, 0, 1, 0, 0, 1], [0, -1, 0, -4, -4, -5, 0, -1, -3;
 0, -1, 0, 0, 0, 0, 0, -1, -4; 0, -3, 0, -2, -2, -3, -6, -3, -9; 0, -4, -1, 
-8, -8, -11, 0, -4, -13; 1, -4, 1, -4, -4, -5, 0, -2, -7; 0, 7, 0, 7, 7, 10,
 0, 4, 14; 0, 0, 0, -2, -3, -3, 0, -1, -3; 0, 0, 0, 28, 28, 35, 0, 12, 35; 0
, 0, 0, -7, -7, -9, 0, -3, -9], [0, -1, 0, -3, -4, -4, -6, -3, -8; 0, 0, -1,
 0, -1, -1, 1, -1, -5; 0, -2, -2, -1, -2, -3, -4, -2, -7; 0, -3, -4, -5, -7,
 -9, -2, -4, -13; 0, -2, -3, -2, -4, -5, -1, -2, -7; 1, 5, 5, 4, 6, 9, 2, 4,
 14; 0, 0, 0, -1, -3, -2, 0, -1, -3; 0, 0, 0, 21, 21, 23, 7, 13, 35; 0, 0, 0
, -5, -4, -5, -2, -3, -8], [0, -2, 6, -6, 0, -2, 0, -2, -4; 0, -1, 1, 0, -6,
 -4, 0, -1, -4; 0, 0, 2, 0, 0, 0, 0, 0, 2; 0, -2, 10, 0, 0, 4, -6, -2, 0; 0,
 -1, 5, 0, 0, 2, 0, -1, 0; 0, 0, -7, 0, 0, -3, 0, 0, -7; 1, -2, 5, 0, 0, 2, 
0, 0, 0; 0, 7, -35, 0, 0, -14, 0, 1, 0; 0, 0, 7, 0, 0, 3, 0, 0, 1], [0, 0, 1
, -3, -1, -2, 0, -1, -2; 0, 0, 0, 1, -1, 0, 1, 0, -1; 0, 0, 0, 1, 1, 1, 2, 1
, 3; 0, 0, 1, 0, -1, 0, 4, 1, 4; 0, 0, 0, 0, 0, 0, 5, 1, 3; 0, 0, 0, 0, 0, 0
, -7, -2, -7; 0, 0, 1, 0, -1, 0, 1, 0, 0; 1, -2, -9, 4, 6, 1, -5, 1, 0; 0, 1
, 2, -1, -1, 0, 1, 0, 1], [0, 1, 2, -11, -4, -8, 2, -3, -6; 0, 0, 0, 4, -1, 
2, 5, 1, 0; 0, 0, 0, 5, 4, 5, 8, 4, 11; 0, 1, 2, -1, -3, -1, 18, 4, 13; 0, 0
, 0, 0, 0, 0, 21, 4, 10; 0, 0, 0, 0, 0, 0, -28, -7, -21; 0, 1, 2, -1, -3, -1
, 4, 0, 0; 0, -14, -21, 21, 21, 12, -21, 3, 0; 1, 5, 5, -5, -4, -2, 4, 0, 3]
], 0, [9, 3, 3, 0, 0, 3, 0, 3, 9]]
norm(u): 1
norm(t): 1
trace(u): 1
trace(t): 1
u+t: 1
u*t: 1
u^3: 1
w^-1 L: 1
w^-1 R: 1
w^-1*u: [Mod(0, x^3 - 21*x + 7), Mod(Mod(1, y), x^3 - 21*x + 7), Mod(0, x^3 
- 21*x + 7)]~
u*w^-1: [Mod(0, x^3 - 21*x + 7), Mod(Mod(1, y), x^3 - 21*x + 7), Mod(0, x^3 
- 21*x + 7)]~
charpol(w): Y^3 - 21*Y^2 + 1179*Y + 9447301/28
eval charpol: 1
trace(w): 1
norm(w): 1
dim: 1
absdim: 1
iscommutative: 1
issemisimple: 1
issimple: 1
algmultable w+ww: 1
algmultable w*ww: 1
alg(basis(w)): 1
alg(basis(ww)): 1
basis(w)+ww: 1
basis(w)-ww: 1
w+basis(ww): 1
w-basis(ww): 1
basis(w)*ww: 1
w*basis(ww): 1
basis(w)^2: 1
basis(ww)^2: 1
basis(w)ww: 1
wbasis(ww): 1
basis(ww)w: 1
wwbasis(w): 1
basis(w)^-1: 1
basis(ww)^-1: 1
basis(w)/ww: 1
w/basis(ww): 1
basis(ww)/w: 1
ww/basis(w): 1
trace(basis(w)): 1
trace(basis(ww)): 1
alg(basis(w)) 2: 1
alg(basis(ww)) 2: 1
basis(w)+ww 2: 1
basis(w)-ww 2: 1
w+basis(ww) 2: 1
w-basis(ww) 2: 1
basis(w)*ww 2: 1
w*basis(ww) 2: 1
basis(w)^2 2: 1
basis(ww)^2 2: 1
basis(w)ww 2: 1
wbasis(ww) 2: 1
basis(ww)w 2: 1
wwbasis(w) 2: 1
basis(w)^-1 2: 1
basis(ww)^-1 2: 1
basis(w)/ww 2: 1
w/basis(ww) 2: 1
basis(ww)/w 2: 1
ww/basis(w) 2: 1
trace(basis(w)) 2: 1
trace(basis(ww)) 2: 1
alg(basis(w)) 3: 1
alg(basis(ww)) 3: 1
basis(w)+ww 3: 1
basis(w)-ww 3: 1
w+basis(ww) 3: 1
w-basis(ww) 3: 1
basis(w)*ww 3: 1
w*basis(ww) 3: 1
basis(w)^2 3: 1
basis(ww)^2 3: 1
basis(w)ww 3: 1
wbasis(ww) 3: 1
basis(ww)w 3: 1
wwbasis(w) 3: 1
basis(w)^-1 3: 1
basis(ww)^-1 3: 1
basis(w)/ww 3: 1
w/basis(ww) 3: 1
basis(ww)/w 3: 1
ww/basis(w) 3: 1
trace(basis(w)) 3: 1
trace(basis(ww)) 3: 1
radical: 1
iscommutative cyc 3: 1
issemisimple cyc 3: 1
issimple cyc 3: 1
algmultable/Q w+ww: 1
algmultable/Q w*ww: 1
alg(basis(w))/Q: 1
alg(basis(ww))/Q: 1
basis(w)+ww/Q: 1
basis(w)-ww/Q: 1
w+basis(ww)/Q: 1
w-basis(ww)/Q: 1
basis(w)*ww/Q: 1
w*basis(ww)/Q: 1
basis(w)^2/Q: 1
basis(ww)^2/Q: 1
basis(w)ww/Q: 1
wbasis(ww)/Q: 1
basis(ww)w/Q: 1
wwbasis(w)/Q: 1
basis(w)^-1/Q: 1
basis(ww)^-1/Q: 1
basis(w)/ww/Q: 1
w/basis(ww)/Q: 1
basis(ww)/w/Q: 1
ww/basis(w)/Q: 1
trace(basis(w))/Q: 1
trace(basis(ww))/Q: 1
radical/Q: 1
iscommutative /Q: 1
issemisimple /Q: 1
issimple /Q: 1
Suite: table algebra
algisassociative 0.0: 1
algisassociative 0.1: error("incorrect type in algisassociative (mult. table
) (t_VEC).")
algisassociative 0.2: 1
algisassociative 0.3: error("incorrect type in algisassociative (mult. table
) (t_POL).")
construction 0: [0, 0, 0, 0, 0, 0, [1, 0, 0; 0, 1, 0; 0, 0, 1], [1, 0, 0; 0,
 1, 0; 0, 0, 1], [[1, 0, 0; 0, 1, 0; 0, 0, 1], [0, 0, 0; 1, 0, 1; 0, 0, 0], 
[0, 0, 0; 0, 0, 0; 1, 0, 1]], 0, [3, 0, 1]]
iscyclic 0: 1
dim 0: 1
dim 0b: 1
char 0: 1
a+b 0: 1
a-b 0: 1
a*b 0: 1
b*a 0: 1
a^2 0: 1
b^2 0: 1
e^691691 0: 1
d^101 0: 1
multable(a) 0: 1
multable(b) 0: 1
divl(d,a) 0: 1
divl(d,b) 0: 1
d^-1 0: 1
divr(a,d) 0: 1
divr(b,d) 0: 1
rad(al) 0: 1
ss(al) 0: 1
proj(a) idem 0: 1
idemproj 0: [[0, 0, 0, 0, 0, 0, Mat(1), Mat(1), [Mat(1)], 0, [1]], [0, 0, 0,
 0, 0, 0, Mat(1), Mat(1), [Mat(1)], 0, [1]]]
simple components 0: 1
center al 0: 1
center ss 0: 1
primesubalg ss 0: error("domain error in algprimesubalg: characteristic = 0"
)
x^3 - 2*x^2 + x
charpol annihil(a) 0: 1
x^3 - x^2
charpol annihil(b) 0: 1
x^3
charpol annihil(c) 0: 1
x^3 - 4*x^2 + 5*x - 2
charpol annihil(d) 0: 1
x^3 - 3*x^2 + 3*x - 1
charpol annihil(e) 0: 1
random 0: [1, 0, 0]~
algsimpledec 0: 1
alg_decomposition 0: 1
iscommutative 0: 1
issemisimple 0: 1
issimple 0: 1
issimple ss 0: 1
isdivision 0: 1
algisassociative 2: 1
construction 2: [0, 0, 0, 0, 0, 0, [1, 0, 0; 0, 1, 0; 0, 0, 1], [1, 0, 0; 0,
 1, 0; 0, 0, 1], [[1, 0, 0; 0, 1, 0; 0, 0, 1], [0, 0, 0; 1, 0, 1; 0, 0, 0], 
[0, 0, 0; 0, 0, 0; 1, 0, 1]], 2, [1, 0, 1]]
iscyclic 2: 1
dim 2: 1
char 2: 1
a+b 2: 1
a-b 2: 1
a*b 2: 1
b*a 2: 1
a^2 2: 1
b^2 2: 1
multable(a) 2: 1
multable(b) 2: 1
divl(un,a) 2: 1
divl(un,b) 2: 1
un^-1 2: 1
divr(a,un) 2: 1
divr(b,un) 2: 1
rad(al) 2: 1
ss(al) 2: 1
proj(a) idem 2: 1
idemproj 2: [[0, 0, 0, 0, 0, 0, Mat(1), Mat(1), [Mat(1)], 2, [1]], [0, 0, 0,
 0, 0, 0, Mat(1), Mat(1), [Mat(1)], 2, [1]]]
simple components 2: 1
center al 2: 1
center ss 2: 1
primesubalg ss 2: 1
x^3 + x
charpol annihil(a) 2: 1
x^3 + x^2
charpol annihil(b) 2: 1
x^3
charpol annihil(c) 2: 1
random 2: [1, 0, 0]~
algsimpledec 2: 1
alg_decomposition 2: 1
iscommutative 2: 1
issemisimple 2: 1
issimple 2: 1
issimple ss 2: 1
matrix trace 2: 1
matrix norm 2: 1
norm 2: 1
construction 3: [0, 0, 0, 0, 0, 0, [1, 0; 0, 1], [1, 0; 0, 1], [[1, 0; 0, 1]
, [0, 0; 1, 0]], 3, [2, 0]]
iscyclic 3: 1
dim 3: 1
char 3: 1
a+b 3: 1
a-b 3: 1
a*b 3: 1
b*a 3: 1
a^2 3: 1
b^2 3: 1
a^691691 3: 1
multable(a) 3: 1
multable(b) 3: 1
algdivl(a,b) 3: 1
a^-1 3: 1
algdivr(b,a) 3: 1
rad(al) 3: 1
ss(al) 3: 1
center al 3: 1
center ss 3: 1
primesubalg ss 3: 1
x^2 + x + 1
charpol annihil(a) 3: 1
x^2
charpol annihil(b) 3: 1
random 3: [1, 0]~
algsimpledec 3: 1
alg_decomposition 3: 1
iscommutative 3: 1
issemisimple 3: 1
issemisimple ss 3: 1
issimple 3: 1
issimple ss 3: 1
construction 3c: [0, 0, 0, 0, 0, 0, [1, 0, 0; 0, 1, 0; 0, 0, 1], [1, 0, 0; 0
, 1, 0; 0, 0, 1], [[1, 0, 0; 0, 1, 0; 0, 0, 1], [0, 0, 0; 1, 0, 0; 0, 1, 0],
 [0, 0, 0; 0, 0, 0; 1, 0, 0]], 3, [0, 0, 0]]
iscyclic 3c: 1
dim 3c: 1
char 3c: 1
a+b 3c: 1
a-b 3c: 1
a*b 3c: 1
b*a 3c: 1
a^2 3c: 1
b^2 3c: 1
a^691691 3c: 1
multable(a) 3c: 1
multable(b) 3c: 1
algdivl(a,b) 3c: 1
a^-1 3c: 1
algdivr(b,a) 3c: 1
rad(al) 3c: 1
ss(al) 3c: 1
center al 3c: 1
center ss 3c: 1
primesubalg ss 3c: 1
x^3 + 2
charpol annihil(a) 3c: 1
x^3
charpol annihil(b) 3c: 1
random 3c: [1, 0, 0]~
algsimpledec 3c: 1
alg_decomposition 3c: 1
iscommutative 3c: 1
issemisimple 3c: 1
issemisimple ss 3c: 1
issimple 3c: 1
issimple ss 3c: 1
construction 2b: [0, 0, 0, 0, 0, 0, [1, 0; 0, 1], [1, 0; 0, 1], [[1, 0; 0, 1
], [0, 1; 1, 1]], 2, [0, 1]]
iscyclic 2b: 1
dim 2b: 1
char 2b: 1
a+b 2b: 1
a-b 2b: 1
a*b 2b: 1
b*a 2b: 1
a^2 2b: 1
b^2 2b: 1
a^691691 2b: 1
multable(a) 2b: 1
multable(b) 2b: 1
divl(a,b) 2b: 1
a^-1 2b: 1
divr(b,a) 2b: 1
rad(al) 2b: 1
center al 2b: 1
primesubalg al 2b: 1
x^2 + x + 1
charpol annihil(a) 2b: 1
x^2 + x + 1
charpol annihil(b) 2b: 1
random 2b: [1, 0]~
algsimpledec 2b: 1
alg_decomposition 2b: 1
iscommutative 2b: 1
issemisimple 2b: 1
issimple 2b: 1
issimple,1 2b: 1
construction 3b: [0, 0, 0, 0, 0, 0, [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 
0, 0, 1], [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [[1, 0, 0, 0; 0,
 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [0, 1, 0, 0; 1, 0, 0, 0; 0, 0, 1, 0; 0, 0
, 0, 2], [0, 0, 0, 2; 0, 0, 0, 2; 1, 2, 0, 0; 0, 0, 0, 0], [0, 0, 2, 0; 0, 0
, 1, 0; 0, 0, 0, 0; 1, 1, 0, 0]], 3, [1, 0, 0, 0]]
iscyclic 3b: 1
dim 3b: 1
char 3b: 1
a+b 3b: 1
a-b 3b: 1
a*b 3b: 1
b*a 3b: 1
a^2 3b: 1
b^2 3b: 1
a^691691 3b: 1
b^691691 3b: 1
multable(a) 3b: 1
multable(b) 3b: 1
divl(a,b) 3b: 1
a^-1 3b: 1
divr(b,a) 3b: 1
rad(al) 3b: 1
center al 3b: 1
primesubalg al 3b: 1
x^4 + x^2 + 1
charpol annihil(a) 3b: 1
x^4 + 2*x^3 + x^2
charpol annihil(b) 3b: 1
x^4
charpol annihil(c) 3b: 1
random 3b: [1, 0, 0, 1]~
algsimpledec 3b: 1
alg_decomposition 3b: 1
iscommutative 3b: 1
issemisimple 3b: 1
issimple 3b: 1
construction 2c: [0, 0, 0, 0, 0, 0, [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 
0, 0, 1], [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [[1, 0, 0, 0; 0,
 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [0, 0, 1, 0; 1, 0, 0, 1; 0, 0, 0, 0; 0, 0
, 1, 0], [0, 0, 0, 0; 0, 0, 0, 0; 1, 0, 0, 0; 0, 1, 0, 0], [0, 0, 0, 0; 0, 0
, 0, 0; 0, 0, 1, 0; 1, 0, 0, 1]], 2, [0, 0, 0, 0]]
iscyclic 2c: 1
dim 2c: 1
char 2c: 1
a+b 2c: 1
a-b 2c: 1
a*b 2c: 1
b*a 2c: 1
a^2 2c: 1
b^2 2c: 1
a^691691 2c: 1
b^691691 2c: 1
c^691691 2c: 1
multable(a) 2c: 1
multable(b) 2c: 1
divl(c,a) 2c: 1
divl(c,b) 2c: 1
c^-1 2c: 1
divr(a,c) 2c: 1
divr(b,c) 2c: 1
rad(al) 2c: 1
center al 2c: 1
primesubalg al 2c: 1
x^4
charpol annihil(a) 2c: 1
x^4 + x^2
charpol annihil(b) 2c: 1
x^4 + x^2 + 1
charpol annihil(c) 2c: 1
random 2c: [1, 0, 0, 1]~
algsimpledec 2c: 1
alg_decomposition 2c: 1
iscommutative 2c: 1
issemisimple 2c: 1
issimple 2c: 1
construction 5: [0, 0, 0, 0, 0, 0, Mat(1), Mat(1), [Mat(1)], 5, [1]]
iscyclic 5: 1
dim 5: 1
char 5: 1
a+b 5: 1
a-b 5: 1
a*b 5: 1
b*a 5: 1
a^2 5: 1
b^2 5: 1
a^691691 5: 1
multable(a) 5: 1
multable(b) 5: 1
divl(a,b) 5: 1
a^-1 5: 1
divr(a,b) 5: 1
rad(al) 5: 1
center al 5: 1
primesubalg al 5: 1
x + 3
charpol annihil(a) 5: 1
x + 2
charpol annihil(b) 5: 1
random 5: [1]~
algsimpledec 5: 1
alg_decomposition 5: 1
iscommutative 5: 1
issemisimple 5: 1
issimple 5: 1
construction 0b: [0, 0, 0, 0, 0, 0, [1, 0, 0, 0, 0; 0, 1, 0, 0, 0; 0, 0, 1, 
0, 0; 0, 0, 0, 1, 0; 0, 0, 0, 0, 1], [1, 0, 0, 0, 0; 0, 1, 0, 0, 0; 0, 0, 1,
 0, 0; 0, 0, 0, 1, 0; 0, 0, 0, 0, 1], [[1, 0, 0, 0, 0; 0, 1, 0, 0, 0; 0, 0, 
1, 0, 0; 0, 0, 0, 1, 0; 0, 0, 0, 0, 1], [0, 0, 1, 0, 0; 1, 0, 0, 1, 0; 0, 0,
 0, 0, 0; 0, 0, -1, 0, 0; 0, 1, -1, -1, 1], [0, 0, 0, 0, 0; 0, 0, 0, 0, 0; 1
, 0, 0, 0, 0; 0, 1, 0, 0, 0; 0, 0, 0, 0, 0], [0, 0, 0, 0, 0; 0, 0, 0, 0, 0; 
0, 0, 1, 0, 0; 1, 0, 0, 1, 0; 0, 0, 0, 0, 0], [0, 0, 0, 0, 0; 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0; 0, 0, 0, 0, 0; 1, 1, 0, 0, 1]], 0, [5, 1, 0, 2, 1]]
iscyclic 0b: 1
dim 0b: 1
char 0b: 1
a+b 0b: 1
a-b 0b: 1
a*b 0b: 1
b*a 0b: 1
a^2 0b: 1
b^2 0b: 1
a^691691 0b: 1
b^691 0b: 1
multable(a) 0b: 1
multable(b) 0b: 1
divl(b,a) 0b: 1
b^-1 0b: 1
divr(a,b) 0b: 1
rad(al) 0b: 1
idemproj 0b: [[0, 0, 0, 0, 0, 0, [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 
0, 1], [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [[1, 0, 0, 0; 0, 1,
 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [0, 0, 1, 0; 1, 0, 0, 1; 0, 0, 0, 0; 0, 0, -
1, 0], [0, 0, 0, 0; 0, 0, 0, 0; 1, 0, 0, 0; 0, 1, 0, 0], [0, 0, 0, 0; 0, 0, 
0, 0; 0, 0, 1, 0; 1, 0, 0, 1]], 0, [4, 0, 0, 2]], [0, 0, 0, 0, 0, 0, Mat(1),
 Mat(1), [Mat(1)], 0, [1]]]
simple components 0b: 1
mt M2 component 0b: 1
center al 0b: 1
primesubalg al 0b: error("domain error in algprimesubalg: characteristic = 0
")
x^5 - 4*x^4 + 6*x^3 - 4*x^2 + x
charpol annihil(a) 0b: 1
x^5 - 6*x^4 + 14*x^3 - 16*x^2 + 9*x - 2
charpol annihil(b) 0b: 1
random 0b: [1, 0, 0, 1, 1]~
algsimpledec 0b: 1
alg_decomposition 0b: 1
subalg M2(Q): 1
iscommutative 0b: 1
issemisimple 0b: 1
issimple 0b: 1
construction 3d: [0, 0, 0, 0, 0, 0, [1, 0, 0, 0, 0; 0, 1, 0, 0, 0; 0, 0, 1, 
0, 0; 0, 0, 0, 1, 0; 0, 0, 0, 0, 1], [1, 0, 0, 0, 0; 0, 1, 0, 0, 0; 0, 0, 1,
 0, 0; 0, 0, 0, 1, 0; 0, 0, 0, 0, 1], [[1, 0, 0, 0, 0; 0, 1, 0, 0, 0; 0, 0, 
1, 0, 0; 0, 0, 0, 1, 0; 0, 0, 0, 0, 1], [0, 0, 1, 0, 0; 1, 0, 0, 1, 0; 0, 0,
 0, 0, 0; 0, 0, 2, 0, 0; 0, 1, 2, 2, 1], [0, 0, 0, 0, 0; 0, 0, 0, 0, 0; 1, 0
, 0, 0, 0; 0, 1, 0, 0, 0; 0, 0, 0, 0, 0], [0, 0, 0, 0, 0; 0, 0, 0, 0, 0; 0, 
0, 1, 0, 0; 1, 0, 0, 1, 0; 0, 0, 0, 0, 0], [0, 0, 0, 0, 0; 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0; 1, 1, 0, 0, 1]], 3, [2, 1, 0, 2, 1]]
iscyclic 3d: 1
dim 3d: 1
char 3d: 1
a+b 3d: 1
a-b 3d: 1
a*b 3d: 1
b*a 3d: 1
a^2 3d: 1
b^2 3d: 1
a^691691 3d: 1
b^691 3d: 1
multable(a) 3d: 1
multable(b) 3d: 1
divl(b,a) 3d: 1
b^-1 3d: 1
divr(a,b) 3d: 1
rad(al) 3d: 1
idemproj 3d: [[0, 0, 0, 0, 0, 0, [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 
0, 1], [1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [[1, 0, 0, 0; 0, 1,
 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [0, 0, 1, 0; 1, 0, 0, 1; 0, 0, 0, 0; 0, 0, 2
, 0], [0, 0, 0, 0; 0, 0, 0, 0; 1, 0, 0, 0; 0, 1, 0, 0], [0, 0, 0, 0; 0, 0, 0
, 0; 0, 0, 1, 0; 1, 0, 0, 1]], 3, [1, 0, 0, 2]], [0, 0, 0, 0, 0, 0, Mat(1), 
Mat(1), [Mat(1)], 3, [1]]]
simple components 3d: 1
mt M2 component 3d: 1
center al 3d: 1
primesubalg al 3d: 1
x^5 + 2*x^4 + 2*x^2 + x
charpol annihil(a) 3d: 1
x^5 + 2*x^3 + 2*x^2 + 1
charpol annihil(b) 3d: 1
random 3d: [1, 0, 0, 1, 1]~
algsimpledec 3d: 1
alg_decomposition 3d: 1
subalg M2(F3): 1
iscommutative 3d: 1
issemisimple 3d: 1
issimple 3d: 1
issimple,1 3d: 1
maxorder assoc: 1
natorder assoc: 1
spl(1): 1
spl(i): 1
spl(j): 1
spl(k): 1
spl(basis(1)): 1
spl(basis(i)): 1
spl(basis(j)): 1
spl(basis(k)): 1
spl(a*1): 1
spl(a*i): 1
spl(a*j): 1
spl(a*k): 1
spl(b*1): 1
spl(b*i): 1
spl(b*j): 1
spl(b*k): 1
nattomax 1: 1
nattomax 2: 1
ord*invord=id: 1
spl additive: 1
spl multiplicative: 1
changebasis bug 1: 1
changebasis bug 2: 1
changebasis bug 3: 1
changebasis bug 4: 1
algtableinit segfault bug: 
1
center of CSA: 1
radical of CSA: 1
decomposition of CSA: 1
alg_decomposition of CSA: 1
alsimple bug
0
tests for al_CSA: 
1
1
should fail:
  ***   at top-level: alfail=alginit(nf,[0,0],'x)
  ***                        ^--------------------
  *** alginit: domain error in idealfactor: ideal = 0
  ***   at top-level: algb(al)
  ***                 ^--------
  *** algb: incorrect type in alg_get_b [non-cyclic algebra] (t_VEC).
  ***   at top-level: algaut(al)
  ***                 ^----------
  *** algaut: incorrect type in alg_get_aut [non-cyclic algebra] (t_VEC).
algebra:
csa getcenter: 1
csa getsplitting: 1
getrelmultable: 1
getsplittingdata:
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
hasse invariants:
  ***   at top-level: print(alghassei(al)==0)
  ***                       ^-----------------
  *** alghassei: sorry, computation of Hasse invariants over table CSA is not yet implemented.
  ***   at top-level: print(alghassef(al)==0)
  ***                       ^-----------------
  *** alghassef: sorry, computation of Hasse invariants over table CSA is not yet implemented.
  ***   at top-level: print(alghasse(al,1)==0)
  ***                       ^------------------
  *** alghasse: sorry, computation of Hasse invariants over table CSA is not yet implemented.
csa splitting pol: 1
csa basis: 1
csa invbasis: 1
csa absdim: 1
csa char: 1
csa deg: 1
csa dim: 1
csa absdim: 1
csa type: 1
csa iscommutative: 1
csa issemisimple: 1
elements:
[0, Mod(y, y^3 - y + 1), 0, 0]~
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]~
csa add: 1
csa neg: 1
csa neg 2: 1
csa sub: 1
csa mul: 1
csa mul 2: 1
csa sqr: 1
csa sqr 2: 1
csa mt: 1
csa inv: 1
csa inv 2: 1
csa divl: 1
csa pow: 1
csa mul 3: 1
csa mul 4: 1
csa pow 2: 1
csa sub 2: 1
csa sub 3: 1
csa inv 3: 1
csa inv 4: 1
csa inv 5: 1
csa trace: 1
csa trace 2: 1
1
testcharpol
1
1
1
testcharpol2
1
1
1
testnorm
1
1
1
testnorm2
1
1
1
examples from docu
0
[2, 2]~
0
1
[Mod(Mod(-1/3, y), x^2 + 1), Mod(Mod(2/3, y), x^2 + 1)]~
0
1
1
[Mod(-2/5*x - 1/5, x^2 + 1), 0]~
[0, 2, -1, -1, 2, 0, 0, 0]~
[Mod(Mod(y, y^2 - 5), x^2 - 2), 1]~
[Mod(Mod(1/2*y - 1, y^2 - 5)*x + Mod(-1/4*y + 5/4, y^2 - 5), x^2 - 2), Mod(M
od(-3/4*y + 7/4, y^2 - 5), x^2 - 2)]~
[0, 1, 0, 0, 2, -3, 0, 0]~
[[0, 0, 0, 0, 0, 0, Mat(1), Mat(1), [Mat(1)], 2, [1]], [0, 0, 0, 0, 0, 0, [1
, 0; 0, 1], [1, 0; 0, 1], [[1, 0; 0, 1], [0, 1; 1, 1]], 2, [0, 1]]]

[1 0]

[0 1]

[0 0]

[0, 0, 0, 0, 0, 0, [1, 0; 0, 1], [1, 0; 0, 1], [[1, 0; 0, 1], [0, 1; 1, 1]],
 2, [0, 1]]
[0, 0, 0, 0, 0, 0, [1, 0; 0, 1], [1, 0; 0, 1], [[1, 0; 0, 1], [0, 1; 1, 1]],
 2, [0, 1]]
1
0
0
0
0
1
[[[2, [2, 0]~, 1, 2, 1], [3, [3, 0]~, 1, 2, 1]], Vecsmall([0, 1])]
12960000
12960000
12
y^3 - y + 1
2
4
-1/3*x^2 + 1/3*x + 26/3
Mod(-77, y)
13
1
[[[19, [10, 2]~, 1, 1, [-8, 2; 2, -10]], [2, [2, 0]~, 1, 2, 1]], Vecsmall([1
, 0])]
Vecsmall([1, 0])
1/2
0
1/2
0
  ***   at top-level: algindex(1,1)
  ***                 ^-------------
  *** algindex: incorrect type in checkalg [please apply alginit()] (t_INT).
2
1
2
1
2
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
[1, [2, [2, 0]~, 1, 2, 1]]
x^2 + Mod(-3/2*y + 13/2, y^2 - 5)

[1 0 0 -1]

[0 1 0 -1]

[0 0 1 -1]

[0 0 0  2]


[1 0 0 1/2]

[0 1 0 1/2]

[0 0 1 1/2]

[0 0 0 1/2]

[[1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [0, -1, 1, 0; 1, 0, 1, 1;
 0, 0, 1, 1; 0, 0, -2, -1], [0, -1, -1, -1; 0, -1, 0, -1; 1, -1, 0, 0; 0, 2,
 0, 1], [0, -1, 0, -1; 0, 0, 1, 0; 0, -1, 1, 0; 1, 1, -1, 1]]
[1/2, -1/2, 0, 0]~
[2, 3, 5, -4]~

[0 -1  1  0]

[1  0  1  1]

[0  0  1  1]

[0  0 -2 -1]

[-1, -1, 0, 0]~

[Mod(x + 1, x^2 + 1) Mod(Mod(1, y)*x + Mod(-1, y), x^2 + 1)]

[Mod(x + 1, x^2 + 1)                   Mod(-x + 1, x^2 + 1)]

[8, -8, 0, 0]~
[0, 1, -1, 0]~
11
3
[[1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [0, y, 0, 0; 1, 0, 0, 0; 
0, 0, 0, y; 0, 0, 1, 0], [0, 0, y^2, 0; 0, 0, 0, -y^2; 1, 0, 0, 0; 0, -1, 0,
 0], [0, 0, 0, -y^3; 0, 0, y^2, 0; 0, -y, 0, 0; 1, 0, 0, 0]]
x^2 - y
[[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]~, [1, 0; 0, -4; 0, 0; 0, 0; 0, 0; 0, 0
; 0, 1; 0, 0; 0, 0; 0, 0; 0, 0; 0, 0], [Mod(1, x^6 - 5), Mod(x^2, x^6 - 5), 
Mod(x^4, x^6 - 5), Mod(x, x^6 - 5), Mod(x^3, x^6 - 5), Mod(1/2*x^5 + 1/2*x^4
 + 1/2*x^3 + 1/2*x^2 + 1/2*x + 1/2, x^6 - 5), Mod(4*x^2, x^6 - 5), Mod(5/2*x
^4 + 5/2*x^2, x^6 - 5), Mod(5/2*x^2 + 5/2, x^6 - 5), Mod(-3/2*x^3 + 21/2, x^
6 - 5), Mod(1/2*x^4 + 1/2*x^3 + 3*x^2 + 1/2*x + 1/2, x^6 - 5), Mod(5/2*x^4 +
 5*x^2 - 3/2*x, x^6 - 5); Mod(0, x^6 - 5), Mod(0, x^6 - 5), Mod(0, x^6 - 5),
 Mod(0, x^6 - 5), Mod(0, x^6 - 5), Mod(0, x^6 - 5), Mod(1, x^6 - 5), Mod(1/2
*x^2 + 1/2, x^6 - 5), Mod(1/10*x^4 + 1/2, x^6 - 5), Mod(1/2*x^4 - 1/2*x, x^6
 - 5), Mod(-1/10*x^3 + 1/2, x^6 - 5), Mod(-1/10*x^5 + 1/2*x^2 + 1, x^6 - 5)]
]
2
18
18
1
1
1
2
x^3 - 21*x + 7
matrices over algebras

[[2, 2, 2, 0, -2, -2, -1, 1]~  [0, -1, -2, -1, 1, 1, 2, 0]~]

[[-2, 2, 1, 2, 2, 2, -2, -2]~ [0, -2, 2, -1, 2, -2, 0, -2]~]


[ [2, 0, 2, 0, -2, 0, 2, -1]~ [0, -2, -2, -1, -1, 0, 2, 0]~]

[[-2, -1, 1, 1, -1, 0, 2, 0]~    [2, 0, 1, 0, 1, 2, -2, 1]~]

mul alM: [[31, -29, 30, -19, 62, 60, -111, 61]~, [3, -75, -9, -50, -19, 17, 
-54, 97]~; [29, -1, 2, -7, 6, 20, -27, -2]~, [26, 28, 22, 21, 4, -5, 6, -32]
~]
sqr alM: 1
divl alM: 1
divr alM: 1
isinv alM: 1
isinv alM 2: 1
inv alM: 1
inv alM 2: 1
neg alM: 1
sub alM: 1
add alM: 1
algtobasis basistoalg alM 1: 1
algtobasis basistoalg alM 2: 1
algmultable add alM: 1
algmultable mul alM: 1
algmultable sqr alM: 1
algsplitm add alM: 1
algsplitm mul alM: 1
algsplitm sqr alM: 1
algsplitm sqr alM 2: 1
algtrace alM: 1
algtrace alM 2: 1
algtrace prod alM: 1
algnorm alM: 1
algnorm alM 2: 1
algcharpoly alM: 1
algcharpoly alM 2: 1
pow alM: 1
pow alM 2: 1
pow 0 alM: 1

[[Mod(Mod(1/4*y + 5/4, y^2 - 5)*x + Mod(y - 3/2, y^2 - 5), x^2 + 1), Mod(Mod
(1/28*y - 5/4, y^2 - 5)*x - 33/14, x^2 + 1)]~ [Mod(Mod(-1/2*y + 1, y^2 - 5)*
x + Mod(-1/2*y + 9/2, y^2 - 5), x^2 + 1), Mod(17/14*x + Mod(1/14*y + 5/2, y^
2 - 5), x^2 + 1)]~]

[[Mod(Mod(1/2*y - 1/2, y^2 - 5)*x + Mod(-1/2*y - 9/2, y^2 - 5), x^2 + 1), Mo
d(Mod(-1/14*y + 1/14, y^2 - 5)*x + Mod(-1/7*y - 2/7, y^2 - 5), x^2 + 1)]~ [M
od(Mod(-y - 4, y^2 - 5)*x + Mod(1/2*y - 5/2, y^2 - 5), x^2 + 1), Mod(Mod(-1/
14*y - 17/14, y^2 - 5)*x + Mod(-1/14*y - 11/14, y^2 - 5), x^2 + 1)]~]


[[Mod(Mod(-1/4*y + 1/4, y^2 - 5)*x + Mod(5/4*y + 7/4, y^2 - 5), x^2 + 1), Mo
d(Mod(-1/28*y + 17/28, y^2 - 5)*x + Mod(1/28*y + 3/28, y^2 - 5), x^2 + 1)]~ 
[Mod(Mod(-1/2*y - 1/2, y^2 - 5)*x + Mod(-1/2*y + 3, y^2 - 5), x^2 + 1), Mod(
5/7*x + Mod(1/14*y + 1, y^2 - 5), x^2 + 1)]~]

[[Mod(Mod(1/2*y - 1/2, y^2 - 5)*x + Mod(y - 1/2, y^2 - 5), x^2 + 1), Mod(5/7
*x + Mod(1/14*y + 1, y^2 - 5), x^2 + 1)]~ [Mod(Mod(1/4*y + 3/4, y^2 - 5)*x +
 Mod(1/4*y + 5/4, y^2 - 5), x^2 + 1), Mod(Mod(1/28*y + 11/28, y^2 - 5)*x + M
od(-1/28*y + 11/28, y^2 - 5), x^2 + 1)]~]

mul scalar alM: 1

[    [0, 0, 1, 0]~    [1, 1, 0, 2]~]

[[-1, -2, -1, -1]~ [-1, -1, 0, -2]~]


[[-1, -1, 1, 0]~  [2, 2, 0, 0]~]

[[2, -2, 2, -1]~ [-1, 2, 1, 2]~]

mul alM t: [[5, -4, -2, 6]~, [-7, -1, 5, -1]~; [-6, 8, 2, -7]~, [9, -5, -7, 
-1]~]
sqr alM t: 1
divl alM t: 1
divr alM t: 1
isinv alM t: 1
isinv alM t 2: 1
inv alM t: 1
inv alM t 2: 1
neg alM t: 1
sub alM t: 1
add alM t: 1
algmultable add alM t: 1
algmultable mul alM t: 1
algmultable sqr alM t: 1
algtrace alM t: 1
algtrace alM t 2: 1
algtrace prod alM t: 1
algnorm alM t: 1
algnorm alM t 2: 1
algcharpoly alM t: 1
algcharpoly alM t 2: 1
pow alM t: 1
pow alM 2 t: 1
pow 0 alM t: 1
csa al2
al2 contains nfabs: 1
[[x^2 + (-2*y^2 + 2*y)*x + (6*y^2 - 5*y + 5), [[292133, -1964*x^5 + 4725*x^4
 - 14044*x^3 - 95698*x^2 - 164828*x - 456632, -1406*x^5 + 4870*x^4 - 7674*x^
3 - 64939*x^2 - 119188*x + 52103], 1/292133], [[412, 92, 376; 0, 4, 0; 0, 0,
 4], [-7, -4, 2]~], 1, [], [], [[1, x], [1, 1]], [1, 0; 0, 1], 1, [y^3 - y +
 1, [1, 1], -23, 1, [[1, 0.75487766624669276004950889635852869189, -1.324717
9572447460259609088544780973407; 1, -0.8774388331233463800247544481792643459
5 + 0.74486176661974423659317042860439236724*I, 0.66235897862237301298045442
723904867037 + 0.56227951206230124389918214490937306150*I], [1, 0.7548776662
4669276004950889635852869189, -1.3247179572447460259609088544780973407; 1, -
0.13257706650360214343158401957487197871, 1.22463849068467425687963657214842
17319; 1, -1.6223005997430906166179248767836567132, 0.1000794665600717690812
7228232967560887], [1, 1, -1; 1, 0, 1; 1, -2, 0], [3, -1, 0; -1, 1, -3; 0, -
3, 2], [23, 16, 10; 0, 1, 0; 0, 0, 1], [7, -2, -3; -2, -6, -9; -3, -9, -2], 
[23, [-10, -1, 8; -7, -3, 1; 1, 7, -10]], [23]], [-1.32471795724474602596090
88544780973407, 0.66235897862237301298045442723904867037 + 0.562279512062301
24389918214490937306150*I], [1, y^2 - 1, y], [1, 0, 1; 0, 0, 1; 0, 1, 0], [1
, 0, 0, 0, 0, -1, 0, -1, 1; 0, 1, 0, 1, -1, 0, 0, 0, 1; 0, 0, 1, 0, -1, 0, 1
, 0, 0]], [x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191, -1406/29213
3*x^5 + 4870/292133*x^4 - 7674/292133*x^3 - 64939/292133*x^2 - 119188/292133
*x + 52103/292133, 0, y^3 - y + 1, x^2 + (-2*y^2 + 2*y)*x + (6*y^2 - 5*y + 5
)], [0]], [[1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1], [0, 0, 1, 0; 1,
 0, 0, 1; 0, 0, 0, 0; 0, 0, -1, 0], [0, 0, 0, 0; 0, 0, 0, 0; 1, 0, 0, 0; 0, 
1, 0, 0], [0, 0, 0, 0; 0, 0, 0, 0; 0, 0, 1, 0; 1, 0, 0, 1]], [[0, 1, -1, -1,
 -2, 2, 0, 0, -2, 2, 0, 0]~, [1, 0; 0, 0; 0, 0; 0, 0; 0, 0; 0, 0; 0, 1; 0, 0
; 0, 0; 0, 0; 0, 0; 0, 0], [Mod(1, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 +
 36*x + 191), Mod(-1964/292133*x^5 + 4725/292133*x^4 - 14044/292133*x^3 - 95
698/292133*x^2 - 164828/292133*x - 456632/292133, x^6 - 4*x^5 + 15*x^4 + 14*
x^3 + 120*x^2 + 36*x + 191), Mod(-1406/292133*x^5 + 4870/292133*x^4 - 7674/2
92133*x^3 - 64939/292133*x^2 - 119188/292133*x + 52103/292133, x^6 - 4*x^5 +
 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(-516/6719059*x^5 + 59549/67190
59*x^4 - 144104/6719059*x^3 + 56369/6719059*x^2 + 2656099/6719059*x + 556383
1/6719059, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(-54291
/6719059*x^5 + 210489/6719059*x^4 - 786258/6719059*x^3 - 905381/6719059*x^2 
- 6840464/6719059*x - 4510816/6719059, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x
^2 + 36*x + 191), Mod(-48132/6719059*x^5 + 241931/6719059*x^4 - 785055/67190
59*x^3 - 523468/6719059*x^2 - 1628025/6719059*x + 4121552/6719059, x^6 - 4*x
^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(0, x^6 - 4*x^5 + 15*x^4 + 
14*x^3 + 120*x^2 + 36*x + 191), Mod(0, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x
^2 + 36*x + 191), Mod(0, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 19
1), Mod(0, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(0, x^6
 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(0, x^6 - 4*x^5 + 15*
x^4 + 14*x^3 + 120*x^2 + 36*x + 191); Mod(0, x^6 - 4*x^5 + 15*x^4 + 14*x^3 +
 120*x^2 + 36*x + 191), Mod(0, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*
x + 191), Mod(0, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(
-499864/154538357*x^5 - 232506/154538357*x^4 + 2075504/154538357*x^3 - 39252
216/154538357*x^2 - 107292314/154538357*x - 129681996/154538357, x^6 - 4*x^5
 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(1153778/154538357*x^5 - 4109
402/154538357*x^4 + 13244560/154538357*x^3 + 24564582/154538357*x^2 + 151883
496/154538357*x - 10149974/154538357, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^
2 + 36*x + 191), Mod(171940/154538357*x^5 - 3019052/154538357*x^4 + 13537158
/154538357*x^3 - 30710744/154538357*x^2 - 25903390/154538357*x - 175396598/1
54538357, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(1, x^6 
- 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(-1964/292133*x^5 + 47
25/292133*x^4 - 14044/292133*x^3 - 95698/292133*x^2 - 164828/292133*x - 4566
32/292133, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(-1406/
292133*x^5 + 4870/292133*x^4 - 7674/292133*x^3 - 64939/292133*x^2 - 119188/2
92133*x + 52103/292133, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191
), Mod(-516/6719059*x^5 + 59549/6719059*x^4 - 144104/6719059*x^3 + 56369/671
9059*x^2 + 2656099/6719059*x + 5563831/6719059, x^6 - 4*x^5 + 15*x^4 + 14*x^
3 + 120*x^2 + 36*x + 191), Mod(-54291/6719059*x^5 + 210489/6719059*x^4 - 786
258/6719059*x^3 - 905381/6719059*x^2 - 6840464/6719059*x - 4510816/6719059, 
x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x + 191), Mod(-48132/6719059*x^
5 + 241931/6719059*x^4 - 785055/6719059*x^3 - 523468/6719059*x^2 - 1628025/6
719059*x + 4121552/6719059, x^6 - 4*x^5 + 15*x^4 + 14*x^3 + 120*x^2 + 36*x +
 191)]], 0, 0, 0, [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [[1, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 
0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0
, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, -1, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, -1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -
1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 1, -1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, -1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, -1, 0], [0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 1, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1,
 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
 [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 1, 
0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, -1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0], [0, 0, 0, 0, 0, 0,
 0, 0, -1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, -1, 0, 0, 0, 0; 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1; 1, -1, 0, 0, 0, 0, 0
, 0, 0, 1, -1, 0; 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, -1, 1, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, -1, 1, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
 0; 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, -1, 1; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1
; 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 0, 1, -1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0; 0, 0, 0,
 0, 0, 0, -1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 1, -1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 1, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 1, 0, 0
, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 1, 0,
 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, -1,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0; 0, 0, -1, 0, 0, 0, 0, 0, 0
, 0, 0, -1; 1, -1, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0; 0, -1, 0, 0, 0, 0, 0, 0, 0
, 0, -1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, -1, 1; 0, 
0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1; 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]], 0, [1
2, -4, 0, 0, 0, 0, 0, 0, 0, 6, -2, 0]]
csa al3
al3 contains nfabs: 1
[[x^3 + (3*y^2 - 4)*x^2 + (-5*y^2 - 2*y + 4)*x + (2*y^2 + 3*y - 1), [[175, 8
8*x^8 - 401*x^7 + 384*x^6 + 1285*x^5 - 2326*x^4 + 1534*x^3 - 1207*x^2 - 275*
x + 1004, -161*x^8 + 762*x^7 - 793*x^6 - 2355*x^5 + 4657*x^4 - 2938*x^3 + 24
39*x^2 + 80*x - 2218], 1/175], [[351425, 326042, 160047; 0, 1, 0; 0, 0, 1], 
[44, -37, -41]~], 1, [], [], [[1, x, x^2], [1, 1, 1]], [1, 0, 0; 0, 1, 0; 0,
 0, 1], 1, [y^3 - y + 1, [1, 1], -23, 1, [[1, 0.7548776662466927600495088963
5852869189, -1.3247179572447460259609088544780973407; 1, -0.8774388331233463
8002475444817926434595 + 0.74486176661974423659317042860439236724*I, 0.66235
897862237301298045442723904867037 + 0.56227951206230124389918214490937306150
*I], [1, 0.75487766624669276004950889635852869189, -1.3247179572447460259609
088544780973407; 1, -0.13257706650360214343158401957487197871, 1.22463849068
46742568796365721484217319; 1, -1.6223005997430906166179248767836567132, 0.1
0007946656007176908127228232967560887], [1, 1, -1; 1, 0, 1; 1, -2, 0], [3, -
1, 0; -1, 1, -3; 0, -3, 2], [23, 16, 10; 0, 1, 0; 0, 0, 1], [7, -2, -3; -2, 
-6, -9; -3, -9, -2], [23, [-10, -1, 8; -7, -3, 1; 1, 7, -10]], [23]], [-1.32
47179572447460259609088544780973407, 0.6623589786223730129804544272390486703
7 + 0.56227951206230124389918214490937306150*I], [1, y^2 - 1, y], [1, 0, 1; 
0, 0, 1; 0, 1, 0], [1, 0, 0, 0, 0, -1, 0, -1, 1; 0, 1, 0, 1, -1, 0, 0, 0, 1;
 0, 0, 1, 0, -1, 0, 1, 0, 0]], [x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x
^4 - 41*x^3 + 21*x^2 + 13*x - 17, -23/25*x^8 + 762/175*x^7 - 793/175*x^6 - 4
71/35*x^5 + 4657/175*x^4 - 2938/175*x^3 + 2439/175*x^2 + 16/35*x - 2218/175,
 0, y^3 - y + 1, x^3 + (3*y^2 - 4)*x^2 + (-5*y^2 - 2*y + 4)*x + (2*y^2 + 3*y
 - 1)], [0]], [[1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1,
 0; 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0; 1, 0, 0, 0, 1, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, -1
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, -1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 1, 0; 1, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, -1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -1, 0, 0], [0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 
1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0; 1, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 1, 0; 1, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 1, 0, 0, 0, 0, 0; 1, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0
], [0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0; 1, 0, 0,
 0, 0, 0, 0, 0, 1]], [[0, -1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0
, 0, 0, 1, 0, 1, 0, 0, 0, 0]~, [1, 0, 0; 0, 0, 0; 0, 0, 0; 0, 0, 0; 0, 0, 0;
 0, 0, 0; 0, 0, 0; 0, 0, 0; 0, 0, 0; 0, 1, 0; 0, 0, 0; 0, 0, 0; 0, 0, 0; 0, 
0, 0; 0, 0, 0; 0, 0, 0; 0, 0, 0; 0, 0, 0; 0, 0, 1; 0, 0, 0; 0, 0, 0; 0, 0, 0
; 0, 0, 0; 0, 0, 0; 0, 0, 0; 0, 0, 0; 0, 0, 0], [Mod(1, x^9 - 6*x^8 + 11*x^7
 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(88/175*x^8 - 
401/175*x^7 + 384/175*x^6 + 257/35*x^5 - 2326/175*x^4 + 1534/175*x^3 - 1207/
175*x^2 - 11/7*x + 1004/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 
- 41*x^3 + 21*x^2 + 13*x - 17), Mod(-23/25*x^8 + 762/175*x^7 - 793/175*x^6 -
 471/35*x^5 + 4657/175*x^4 - 2938/175*x^3 + 2439/175*x^2 + 16/35*x - 2218/17
5, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x -
 17), Mod(-239/175*x^8 + 1128/175*x^7 - 1187/175*x^6 - 681/35*x^5 + 6793/175
*x^4 - 4672/175*x^3 + 4096/175*x^2 - 38/35*x - 3027/175, x^9 - 6*x^8 + 11*x^
7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-14/25*x^8 +
 481/175*x^7 - 564/175*x^6 - 54/7*x^5 + 3091/175*x^4 - 2264/175*x^3 + 1812/1
75*x^2 - 52/35*x - 1384/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 
- 41*x^3 + 21*x^2 + 13*x - 17), Mod(173/175*x^8 - 816/175*x^7 + 869/175*x^6 
+ 488/35*x^5 - 4931/175*x^4 + 3499/175*x^3 - 2927/175*x^2 + 48/35*x + 297/25
, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 
17), Mod(-8/7*x^8 + 27/5*x^7 - 198/35*x^6 - 576/35*x^5 + 229/7*x^4 - 761/35*
x^3 + 671/35*x^2 - 11/35*x - 542/35, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 +
 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-4/175*x^8 + 33/175*x^7 - 11/25*
x^6 - 6/35*x^5 + 353/175*x^4 - 51/25*x^3 + 106/175*x^2 - 2/5*x - 202/175, x^
9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17),
 Mod(88/175*x^8 - 401/175*x^7 + 384/175*x^6 + 257/35*x^5 - 2326/175*x^4 + 15
34/175*x^3 - 1207/175*x^2 - 4/7*x + 1004/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 -
 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7
 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^
8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, 
x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17
), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 +
 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 
+ 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4
 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^
5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x
^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11
*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 
6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod
(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x 
- 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x
^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*
x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56
*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 4
7*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 +
 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 
+ 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^
9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17);
 Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 1
3*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 
21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 -
 41*x^3 + 21*x^2 + 13*x - 17), Mod(-346/175*x^8 + 1627/175*x^7 - 1678/175*x^
6 - 1007/35*x^5 + 9837/175*x^4 - 6428/175*x^3 + 5309/175*x^2 + 33/35*x - 481
8/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13
*x - 17), Mod(-349/175*x^8 + 1628/175*x^7 - 236/25*x^6 - 202/7*x^5 + 9738/17
5*x^4 - 921/25*x^3 + 5381/175*x^2 + 9/5*x - 4622/175, x^9 - 6*x^8 + 11*x^7 +
 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(596/175*x^8 - 4
01/25*x^7 + 2918/175*x^6 + 1726/35*x^5 - 17057/175*x^4 + 11208/175*x^3 - 927
9/175*x^2 - 11/7*x + 8178/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^
4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-26/25*x^8 + 849/175*x^7 - 871/175*x^6
 - 521/35*x^5 + 5064/175*x^4 - 3441/175*x^3 + 2913/175*x^2 - 18/35*x - 2361/
175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x
 - 17), Mod(-279/175*x^8 + 1313/175*x^7 - 196/25*x^6 - 160/7*x^5 + 7918/175*
x^4 - 771/25*x^3 + 4576/175*x^2 + 2/5*x - 3607/175, x^9 - 6*x^8 + 11*x^7 + 8
*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(404/175*x^8 - 192
3/175*x^7 + 2057/175*x^6 + 1158/35*x^5 - 11803/175*x^4 + 7967/175*x^3 - 6641
/175*x^2 + 36/35*x + 5447/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^
4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(1, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x
^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(88/175*x^8 - 401/175*x^7 + 3
84/175*x^6 + 257/35*x^5 - 2326/175*x^4 + 1534/175*x^3 - 1207/175*x^2 - 11/7*
x + 1004/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x
^2 + 13*x - 17), Mod(-23/25*x^8 + 762/175*x^7 - 793/175*x^6 - 471/35*x^5 + 4
657/175*x^4 - 2938/175*x^3 + 2439/175*x^2 + 16/35*x - 2218/175, x^9 - 6*x^8 
+ 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-239/
175*x^8 + 1128/175*x^7 - 1187/175*x^6 - 681/35*x^5 + 6793/175*x^4 - 4672/175
*x^3 + 4096/175*x^2 - 38/35*x - 3027/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*
x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-14/25*x^8 + 481/175*x^7 - 
564/175*x^6 - 54/7*x^5 + 3091/175*x^4 - 2264/175*x^3 + 1812/175*x^2 - 52/35*
x - 1384/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x
^2 + 13*x - 17), Mod(173/175*x^8 - 816/175*x^7 + 869/175*x^6 + 488/35*x^5 - 
4931/175*x^4 + 3499/175*x^3 - 2927/175*x^2 + 48/35*x + 297/25, x^9 - 6*x^8 +
 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-8/7*x
^8 + 27/5*x^7 - 198/35*x^6 - 576/35*x^5 + 229/7*x^4 - 761/35*x^3 + 671/35*x^
2 - 11/35*x - 542/35, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^
3 + 21*x^2 + 13*x - 17), Mod(-4/175*x^8 + 33/175*x^7 - 11/25*x^6 - 6/35*x^5 
+ 353/175*x^4 - 51/25*x^3 + 106/175*x^2 - 2/5*x - 202/175, x^9 - 6*x^8 + 11*
x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(88/175*x^8
 - 401/175*x^7 + 384/175*x^6 + 257/35*x^5 - 2326/175*x^4 + 1534/175*x^3 - 12
07/175*x^2 - 4/7*x + 1004/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^
4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x
^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*
x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 1
1*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 -
 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mo
d(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x
 - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*
x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41
*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 5
6*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 
47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17); Mod(0, x^9 - 6*x^8 + 11*x^7 
+ 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8
 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x
^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17)
, Mod(-26/25*x^8 + 849/175*x^7 - 871/175*x^6 - 521/35*x^5 + 5064/175*x^4 - 3
441/175*x^3 + 2913/175*x^2 - 18/35*x - 2361/175, x^9 - 6*x^8 + 11*x^7 + 8*x^
6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-279/175*x^8 + 1313/
175*x^7 - 196/25*x^6 - 160/7*x^5 + 7918/175*x^4 - 771/25*x^3 + 4576/175*x^2 
+ 2/5*x - 3607/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 
+ 21*x^2 + 13*x - 17), Mod(404/175*x^8 - 1923/175*x^7 + 2057/175*x^6 + 1158/
35*x^5 - 11803/175*x^4 + 7967/175*x^3 - 6641/175*x^2 + 36/35*x + 5447/175, x
^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17)
, Mod(-3/7*x^8 + 67/35*x^7 - 61/35*x^6 - 218/35*x^5 + 368/35*x^4 - 247/35*x^
3 + 223/35*x^2 + 4/35*x - 174/35, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56
*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-36/25*x^8 + 1194/175*x^7 - 1266/17
5*x^6 - 144/7*x^5 + 7279/175*x^4 - 4971/175*x^3 + 4188/175*x^2 + 13/35*x - 3
336/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 
13*x - 17), Mod(37/25*x^8 - 1243/175*x^7 + 1357/175*x^6 + 741/35*x^5 - 7748/
175*x^4 + 5202/175*x^3 - 4251/175*x^2 + 36/35*x + 3602/175, x^9 - 6*x^8 + 11
*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 
6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod
(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x 
- 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x
^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*
x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56
*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 4
7*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 + 11*x^7 +
 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^9 - 6*x^8 
+ 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(0, x^
9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17),
 Mod(1, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 1
3*x - 17), Mod(88/175*x^8 - 401/175*x^7 + 384/175*x^6 + 257/35*x^5 - 2326/17
5*x^4 + 1534/175*x^3 - 1207/175*x^2 - 11/7*x + 1004/175, x^9 - 6*x^8 + 11*x^
7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-23/25*x^8 +
 762/175*x^7 - 793/175*x^6 - 471/35*x^5 + 4657/175*x^4 - 2938/175*x^3 + 2439
/175*x^2 + 16/35*x - 2218/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^
4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-239/175*x^8 + 1128/175*x^7 - 1187/175
*x^6 - 681/35*x^5 + 6793/175*x^4 - 4672/175*x^3 + 4096/175*x^2 - 38/35*x - 3
027/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 
13*x - 17), Mod(-14/25*x^8 + 481/175*x^7 - 564/175*x^6 - 54/7*x^5 + 3091/175
*x^4 - 2264/175*x^3 + 1812/175*x^2 - 52/35*x - 1384/175, x^9 - 6*x^8 + 11*x^
7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(173/175*x^8 
- 816/175*x^7 + 869/175*x^6 + 488/35*x^5 - 4931/175*x^4 + 3499/175*x^3 - 292
7/175*x^2 + 48/35*x + 297/25, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4
 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-8/7*x^8 + 27/5*x^7 - 198/35*x^6 - 576/
35*x^5 + 229/7*x^4 - 761/35*x^3 + 671/35*x^2 - 11/35*x - 542/35, x^9 - 6*x^8
 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17), Mod(-4/1
75*x^8 + 33/175*x^7 - 11/25*x^6 - 6/35*x^5 + 353/175*x^4 - 51/25*x^3 + 106/1
75*x^2 - 2/5*x - 202/175, x^9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 4
1*x^3 + 21*x^2 + 13*x - 17), Mod(88/175*x^8 - 401/175*x^7 + 384/175*x^6 + 25
7/35*x^5 - 2326/175*x^4 + 1534/175*x^3 - 1207/175*x^2 - 4/7*x + 1004/175, x^
9 - 6*x^8 + 11*x^7 + 8*x^6 - 47*x^5 + 56*x^4 - 41*x^3 + 21*x^2 + 13*x - 17)]
], 0, 0, 0, [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 
0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [[1, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, -1, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, -1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 1, -1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0], [0, -1, 1, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, -1, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0
, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -1, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, -1, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 1, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 1,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 
0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, -1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, -1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0; 0, 0, -1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1; 1, -1,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0;
 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 -1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, -1, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, -1, 1, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1; 0, 0, 1, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1
, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, -1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, -1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0,
 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -1, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, -1, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1,
 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 
0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0
, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, -1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, -1, 0, 0, 0, 0; 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, -1; 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0; 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0; 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, -1, 1; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0
, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, -1, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0
, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -1, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 
-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0; 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -
1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,
 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, -1, 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 1,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0
, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 1, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0; 0, 1, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0; 0,
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, -1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 1, -1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0; 0, 0, -1, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1; 1, -1, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0; 0, -1, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1,
 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0; 0, -1, 1, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1; 0, 0, 1, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 1, 0, 0, 0, 0, 0
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]], 0, [27, -
9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, -3,
 0]]
trivial algebra over a quadratic field
[[x, [[1, -x], 1], [[1, 0; 0, 1], 1], 1, [], [], [[1], [1]], Mat(1), 1, [y^2
 + 1, [0, 1], -4, 1, [Mat([1, 0.E-57 + 1.00000000000000000000000000000000000
00*I]), [1, 1.0000000000000000000000000000000000000; 1, -1.00000000000000000
00000000000000000000], [1, 1; 1, -1], [2, 0; 0, -2], [2, 0; 0, 2], [1, 0; 0,
 -1], [1, [0, -1; 1, 0]], [2]], [0.E-57 + 1.00000000000000000000000000000000
00000*I], [1, y], [1, 0; 0, 1], [1, 0, 0, -1; 0, 1, 1, 0]], [x^2 + 1, -x, -1
, y^2 + 1, x], [[x^2 + 1, [0, 1], -4, 1, [Mat([1, 0.E-77 - 1.000000000000000
0000000000000000000000*I]), [1, -1.0000000000000000000000000000000000000; 1,
 1.0000000000000000000000000000000000000], [1, -1; 1, 1], [2, 0; 0, -2], [2,
 0; 0, 2], [1, 0; 0, -1], [1, [0, -1; 1, 0]], []], [0.E-77 + 1.0000000000000
000000000000000000000000*I], [1, -x], [1, 0; 0, -1], [1, 0, 0, -1; 0, 1, 1, 
0]]]], [Mod(y, y^2 + 1)], Mod(1, y^2 + 1), Vecsmall([]), [[], Vecsmall([])],
 0, [1, 0; 0, 1], [1, 0; 0, 1], [[1, 0; 0, 1], [0, -1; 1, 0]], 0, [2, 0]]
[y]~
[-2*y + 1]~
[3, 1]~
[-y + 1]~
[3, 0]~
[Mod(Mod(y + 2, y^2 + 1), x)]~
[1/5, 7/5]~
[1/5, 7/5]~
[Mod(Mod(-y, y^2 + 1), x)]~
[1, -2]~

[Mod(Mod(y, y^2 + 1), x)]

x + Mod(2*y - 1, y^2 + 1)
Mod(y + 3, y^2 + 1)
Mod(y + 3, y^2 + 1)
1
1
1
0
0
1
1
1
0
[]
trivial algebra over Q
[[x, [[1], 1], [Mat(1), 1], 1, [], [], [[1], [1]], Mat(1), 1, [y, [1, 0], 1,
 1, [Mat(1), Mat(1), Mat(1), Mat(1), 1, Mat(1), [1, 0], []], [0.E-57], [1], 
Mat(1), Mat(1)], [x, 0, -1, y, x], [[x, [1, 0], 1, 1, [Mat(1), Mat(1), Mat(1
), Mat(1), 1, Mat(1), [1, 0], []], [0.E-77], [1], Mat(1), Mat(1)]]], [0], Mo
d(1, y), Vecsmall([0]), [[], Vecsmall([])], 0, Mat(1), Mat(1), [Mat(1)], 0, 
[1]]
[-2]~
[1/3]~
[-3]~
[-5/3]~
[-1]~
[-2/3]~
[-9]~
[-9]~
[-1/2]~
[1/3]~

[-2]

x - 1/3
-3
-3
1
1
1
0
0
1
1
1
0
[]
trivial CSA over Q
[Mod(9, y)]~
[4]~
  ***   at top-level: algsqr(al,[Mod(1,y),
  ***                 ^--------------------
  *** algsqr: incorrect type in alg_model (t_COL).
nontrivial CSA over Q
[Mod(0, y), Mod(12, y), Mod(6, y), Mod(12, y)]~
[-81, 27, 36, 45]~
  ***   at top-level: algsqr(al,[Mod(1,y),
  ***                 ^--------------------
  *** algsqr: incorrect type in alg_model (t_COL).
empty matrices
-v: 1
v^(-1): 1
v^n: 1
v^0: 1
mt(v)1
spl(v)1
trace(v): 1
norm(v): 1
charpoly(v): 1
v+v: 1
v-v: 1
v*v: 1
v/v: 1
v\v: 1
v*nv: 1
v*v 2: 1
trace(v) char 2: 1
[0, 0, 0, 0, 0, 0, Mat(1), Mat(1), [Mat(1)], 0, [1]]
[12]~
[-1/7]~
[83/7]~
[85/7]~
[-12/7]~
[-12]~
[1/12]~
[1/49]~
[-1/84]~
12
-1/7
x - 12

[-1/7]

[1]~
1
1
1
1
  ***   at top-level: algsplittingfield(al
  ***                 ^--------------------
  *** algsplittingfield: incorrect type in alg_get_splittingfield [use alginit] (t_VEC).
  ***   at top-level: algdegree(almt)
  ***                 ^---------------
  *** algdegree: incorrect type in alg_get_degree [use alginit] (t_VEC).
  ***   at top-level: alghassei(almt)
  ***                 ^---------------
  *** alghassei: incorrect type in alg_get_hasse_i [use alginit] (t_VEC).
  ***   at top-level: alghassef(almt)
  ***                 ^---------------
  *** alghassef: incorrect type in alg_get_hasse_f [use alginit] (t_VEC).
  ***   at top-level: algrandom(1,1)
  ***                 ^--------------
  *** algrandom: incorrect type in checkalg [please apply alginit()] (t_INT).
  ***   at top-level: algrandom(1,I)
  ***                 ^--------------
  *** algrandom: incorrect type in algrandom (t_COMPLEX).
0
  ***   at top-level: algdim([1,[1],0,0,0,
  ***                 ^--------------------
  *** algdim: incorrect type in checkalg [please apply alginit()] (t_VEC).
  ***   at top-level: algabsdim([1,[1],0,0
  ***                 ^--------------------
  *** algabsdim: incorrect type in checkalg [please apply alginit()] (t_VEC).
  ***   at top-level: algtensor(al,al2)
  ***                 ^-----------------
  *** algtensor: sorry, tensor of non-cyclic algebras is not yet implemented.
  ***   at top-level: algtensor(al2,al)
  ***                 ^-----------------
  *** algtensor: sorry, tensor of non-cyclic algebras is not yet implemented.
  ***   at top-level: algtensor(1,z,1)
  ***                 ^----------------
  *** algtensor: incorrect type in checkalg [please apply alginit()] (t_INT).
  ***   at top-level: algisassociative([1]
  ***                 ^--------------------
  *** algisassociative: incorrect type in algisassociative (mult. table) (t_VEC).
  ***   at top-level: algisassociative([[1
  ***                 ^--------------------
  *** algisassociative: incorrect type in algisassociative (mult. table) (t_VEC).
  ***   at top-level: algmul(almt,a,b)
  ***                 ^----------------
  *** algmul: incorrect type in alg_model (t_COL).
  ***   at top-level: algmultable(almt,a)
  ***                 ^-------------------
  *** algmultable: incorrect type in alg_model (t_COL).
  ***   at top-level: alginv(almt,a)
  ***                 ^--------------
  *** alginv: incorrect type in alg_model (t_COL).
  ***   at top-level: algsplittingmatrix(a
  ***                 ^--------------------
  *** algsplittingmatrix: domain error in algsplittingmatrix: alg_type(al) = 1
  ***   at top-level: algalgtobasis(almt,a
  ***                 ^--------------------
  *** algalgtobasis: incorrect type in algalgtobasis [use alginit] (t_VEC).
  ***   at top-level: algbasistoalg(almt,[
  ***                 ^--------------------
  *** algbasistoalg: incorrect type in algbasistoalg [use alginit] (t_VEC).
  ***   at top-level: algpoleval(almt,1,a)
  ***                 ^--------------------
  *** algpoleval: incorrect type in algpoleval (t_INT).
  ***   at top-level: algadd(almt,[zero;ze
  ***                 ^--------------------
  *** algadd: inconsistent dimensions in alM_add (rows).
  ***   at top-level: algadd(almt,[zero;ze
  ***                 ^--------------------
  *** algadd: inconsistent dimensions in alM_add (columns).
  ***   at top-level: algsub(almt,[zero;ze
  ***                 ^--------------------
  *** algsub: inconsistent dimensions in alM_sub (rows).
  ***   at top-level: algsub(almt,[zero;ze
  ***                 ^--------------------
  *** algsub: inconsistent dimensions in alM_sub (columns).
  ***   at top-level: algmul(almt,m,[zero;
  ***                 ^--------------------
  *** algmul: inconsistent dimensions in alM_mul.
  ***   at top-level: algsqr(almt,[zero;ze
  ***                 ^--------------------
  *** algsqr: inconsistent dimensions in alM_mul.
  ***   at top-level: algdivl(almt,m,zero)
  ***                 ^--------------------
  *** algdivl: forbidden division t_MAT (1x2) \ t_COL (4 elts).
  ***   at top-level: algdivl(almt,m,[zero
  ***                 ^--------------------
  *** algdivl: inconsistent dimensions in algdivl.
  ***   at top-level: algdivl(almt,m,m)
  ***                 ^-----------------
  *** algdivl: inconsistent dimensions in algdivl (nonsquare).
  ***   at top-level: alginv(almt,m)
  ***                 ^--------------
  *** alginv: inconsistent dimensions in alginv_i (nonsquare).
  ***   at top-level: algmultable(almt,m)
  ***                 ^-------------------
  *** algmultable: inconsistent dimensions in algmultable_mat (nonsquare).
  ***   at top-level: algpow(almt,m,3)
  ***                 ^----------------
  *** algpow: inconsistent dimensions in alM_mul.
  ***   at top-level: algtrace(almt,m)
  ***                 ^----------------
  *** algtrace: inconsistent dimensions in algtrace_mat (nonsquare).
  ***   at top-level: algcharpoly(almt,m)
  ***                 ^-------------------
  *** algcharpoly: inconsistent dimensions in algmultable_mat (nonsquare).
  ***   at top-level: algcharpoly(alginit(
  ***                 ^--------------------
  *** algcharpoly: incorrect type in easychar (t_MAT).
  ***   at top-level: algnorm(almt,m)
  ***                 ^---------------
  *** algnorm: inconsistent dimensions in algmultable_mat (nonsquare).
  ***   at top-level: algnorm(alginit(nfin
  ***                 ^--------------------
  *** algnorm: inconsistent dimensions in det.
  ***   at top-level: alginit(nfinit(y),[2
  ***                 ^--------------------
  *** alginit: incorrect type in Hasse invariant (t_POL).
  ***   at top-level: alginit(nfinit(y),[2
  ***                 ^--------------------
  *** alginit: incorrect type in checkhasse [hf] (t_VECSMALL).
  ***   at top-level: alginit(nfinit(y),[2
  ***                 ^--------------------
  *** alginit: domain error in checkhasse: sum(Hasse invariants) != 0
  ***   at top-level: alginit(y,[2,[[],[]]
  ***                 ^--------------------
  *** alginit: incorrect type in alinit3 (t_POL).
  ***   at top-level: alginit(nfinit(y),y)
  ***                 ^--------------------
  *** alginit: incorrect type in alinit1 (t_POL).
  ***   at top-level: alginit(nfinit(y),[1
  ***                 ^--------------------
  *** alginit: incorrect type in alinit1 (t_VEC).
  ***   at top-level: algtableinit(mt,y)
  ***                 ^------------------
  *** algtableinit: incorrect type in algtableinit (t_POL).
  ***   at top-level: alginit(nfinit(x^2+1
  ***                 ^--------------------
  *** alginit: domain error in alg_matrix: n <= 0
  ***   at top-level: ...t(nfinit(y^2-2),[-1,-1]);algrandom(al,-10)
  ***                                             ^-----------------
  *** algrandom: domain error in algrandom: b < 0
  ***   at top-level: algrelmultable(al)
  ***                 ^------------------
  *** algrelmultable: incorrect type in alg_get_relmultable [algebra not given via mult. table] (t_VEC).
  ***   at top-level: algsplittingdata(al)
  ***                 ^--------------------
  *** algsplittingdata: incorrect type in alg_get_splittingdata [algebra not given via mult. table] (t_VEC).
  ***   at top-level: alghasse(almt,1)
  ***                 ^----------------
  *** alghasse: incorrect type in alghasse_0 [use alginit] (t_VEC).
  ***   at top-level: algindex(almt,1)
  ***                 ^----------------
  *** algindex: incorrect type in algindex [use alginit] (t_VEC).
  ***   at top-level: algisdivision(almt)
  ***                 ^-------------------
  *** algisdivision: sorry, algisdivision for table algebras is not yet implemented.
  ***   at top-level: algissplit(almt)
  ***                 ^----------------
  *** algissplit: incorrect type in algissplit [use alginit] (t_VEC).
  ***   at top-level: algisramified(almt)
  ***                 ^-------------------
  *** algisramified: incorrect type in algisramified [use alginit] (t_VEC).
  ***   at top-level: algramifiedplaces(al
  ***                 ^--------------------
  *** algramifiedplaces: incorrect type in algramifiedplaces [use alginit] (t_VEC).
  ***   at top-level: alghasse(al,-1)
  ***                 ^---------------
  *** alghasse: domain error in is_place_prid: pl <= 0
  ***   at top-level: alghasse(al,3)
  ***                 ^--------------
  *** alghasse: domain error in is_place_prid: pl > 2
  ***   at top-level: alghasse(al,2^100)
  ***                 ^------------------
  *** alghasse: domain error in is_place_prid: pl > 2
  ***   at top-level: alghasse(al,[])
  ***                 ^---------------
  *** alghasse: incorrect type in is_place_prid (t_VEC).
  ***   at top-level: alghasse(al,1/3)
  ***                 ^----------------
  *** alghasse: incorrect type in is_place_prid (t_FRAC).
  ***   at top-level: algtableinit([matid(
  ***                 ^--------------------
  *** algtableinit: domain error in algtableinit: denominator(mt) != 1
  ***   at top-level: alginit(Q,[matid(2),
  ***                 ^--------------------
  *** alginit: domain error in alg_csa_table: denominator(mt) != 1
  ***   at top-level: alginit(Q,[-1/2,-1])
  ***                 ^--------------------
  *** alginit: domain error in alg_hilbert: denominator(a) != 1
  ***   at top-level: alginit(Q,[-1,-1/2])
  ***                 ^--------------------
  *** alginit: domain error in alg_hilbert: denominator(b) != 1
  ***   at top-level: alginit(rnfinit(Q,x^
  ***                 ^--------------------
  *** alginit: domain error in alg_cyclic: denominator(b) != 1
  ***   at top-level: algsqr([0,0,0,0,0,0,
  ***                 ^--------------------
  *** algsqr: incorrect type in checkalg [please apply alginit()] (t_VEC).
  ***   at top-level: algsqr([0,0,0,0,0,0,
  ***                 ^--------------------
  *** algsqr: incorrect type in checkalg [please apply alginit()] (t_VEC).
  ***   at top-level: algsqr([0,0,0,0,0,0,
  ***                 ^--------------------
  *** algsqr: incorrect type in checkalg [please apply alginit()] (t_VEC).
  ***   at top-level: algsqr([0,0,0,0,0,0,
  ***                 ^--------------------
  *** algsqr: incorrect type in alg_model (t_COL).
  ***   at top-level: algsqr([[],0,0,0,0,0
  ***                 ^--------------------
  *** algsqr: incorrect type in checkalg [please apply alginit()] (t_VEC).
  ***   at top-level: algsqr([[],[0],0,0,0
  ***                 ^--------------------
  *** algsqr: incorrect type in checkrnf (t_VEC).
  ***   at top-level: algdim([[],[0],0,0,0
  ***                 ^--------------------
  *** algdim: incorrect type in checkrnf (t_VEC).
  ***   at top-level: algdegree([[],[0],0,
  ***                 ^--------------------
  *** algdegree: incorrect type in checkrnf (t_VEC).
  ***   at top-level: algdegree([rnfinit(n
  ***                 ^--------------------
  *** algdegree: incorrect type in alg_get_degree [use alginit] (t_VEC).
  ***   at top-level: algcenter([rnfinit(n
  ***                 ^--------------------
  *** algcenter: incorrect type in alg_get_center [use alginit] (t_VEC).
  ***   at top-level: algcentralproj(almt,
  ***                 ^--------------------
  *** algcentralproj: incorrect type in alcentralproj (t_INT).
  ***   at top-level: algcentralproj(almt,
  ***                 ^--------------------
  *** algcentralproj: incorrect type in alcentralproj [z[i]'s not surjective] (t_VEC).
  ***   at top-level: algsubalg(almt,0)
  ***                 ^-----------------
  *** algsubalg: incorrect type in algsubalg (t_INT).
  ***   at top-level: algisassociative([])
  ***                 ^--------------------
  *** algisassociative: incorrect type in algisassociative (mult. table) (t_VEC).
  ***   at top-level: algisassociative([ma
  ***                 ^--------------------
  *** algisassociative: incorrect type in algisassociative (mult. table) (t_VEC).
  ***   at top-level: algisassociative([[1
  ***                 ^--------------------
  *** algisassociative: incorrect type in algisassociative (mult. table) (t_VEC).
  ***   at top-level: algisassociative([ma
  ***                 ^--------------------
  *** algisassociative: incorrect type in algisassociative (t_VEC).
  ***   at top-level: algsqr(algtableinit(
  ***                 ^--------------------
  *** algsqr: incorrect type in alg_model (t_COL).
  ***   at top-level: algsqr(al,vector(691
  ***                 ^--------------------
  *** algsqr: incorrect type in alg_model (t_COL).
  ***   at top-level: algsqr(al,[1,2,3,4,5
  ***                 ^--------------------
  *** algsqr: incorrect type in checkalgx (t_POL).
  ***   at top-level: algsqr(al,[f^3,[]]~)
  ***                 ^--------------------
  *** algsqr: incorrect type in checkalgx (t_VEC).
  ***   at top-level: algmul(al,[;],[1,2]~
  ***                 ^--------------------
  *** algmul: incorrect type in algmul (t_COL).
  ***   at top-level: algdivl(al,[;],matid
  ***                 ^--------------------
  *** algdivl: impossible inverse in algdivl: [;].
  ***   at top-level: algdivl(al,matid(1),
  ***                 ^--------------------
  *** algdivl: inconsistent dimensions in algdivl (nonsquare).
  ***   at top-level: alginv(al,[0,0]~)
  ***                 ^-----------------
  *** alginv: impossible inverse in alginv: [0, 0]~.
  ***   at top-level: algalgtobasis(al0mt,
  ***                 ^--------------------
  *** algalgtobasis: incorrect type in algalgtobasis [use alginit] (t_VEC).
  ***   at top-level: algbasistoalg(al0mt,
  ***                 ^--------------------
  *** algbasistoalg: incorrect type in algbasistoalg [use alginit] (t_VEC).
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: incorrect type in nfgrunwaldwang (t_INT).
  ***   at top-level: alginit(rnfinit(nfin
  ***                 ^--------------------
  *** alginit: incorrect type in alinit2 (t_INT).
  ***   at top-level: alginit(rnfinit(nfin
  ***                 ^--------------------
  *** alginit: incorrect type in alinit2 (t_VEC).
  ***   at top-level: alginit(nfinit(y),[m
  ***                 ^--------------------
  *** alginit: incorrect type in alg_csa_table (t_VEC).
  ***   at top-level: alginit(nfinit(y),[m
  ***                 ^--------------------
  *** alginit: domain error in alg_csa_table: (nonsquare) dimension != 1
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: incorrect type in nfgrunwaldwang (t_INT).
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: inconsistent dimensions in nfgrunwaldwang [#Lpr != #Ld].
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: domain error in nfgrunwaldwang [pl should have r1 components]: #pl != 1
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: sorry, nfgrunwaldwang for non prime-power local degrees (a) is not yet implemented.
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: sorry, nfgrunwaldwang for non prime-power local degrees (b) is not yet implemented.
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: sorry, nfgrunwaldwang for non prime-power local degrees (c) is not yet implemented.
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: incorrect type in checkprid (t_COL).
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: sorry, nfgrunwaldwang for non-prime degree is not yet implemented.
  ***   at top-level: algdegree(A)
  ***                 ^------------
  *** algdegree: incorrect type in alg_get_degree [use alginit] (t_VEC).
  ***   at top-level: algsub(A,1,1)
  ***                 ^-------------
  *** algsub: incorrect type in alg_model (t_INT).
  ***   at top-level: algadd(A,1,1)
  ***                 ^-------------
  *** algadd: incorrect type in alg_model (t_INT).
  ***   at top-level: algneg(A,1)
  ***                 ^-----------
  *** algneg: incorrect type in alg_model (t_INT).
  ***   at top-level: algmul(A,1,1)
  ***                 ^-------------
  *** algmul: incorrect type in alg_model (t_INT).
  ***   at top-level: algsqr(A,1)
  ***                 ^-----------
  *** algsqr: incorrect type in alg_model (t_INT).
  ***   at top-level: algdivl(A,1,1)
  ***                 ^--------------
  *** algdivl: incorrect type in alg_model (t_INT).
  ***   at top-level: algdivr(A,1,1)
  ***                 ^--------------
  *** algdivr: incorrect type in alg_model (t_INT).
  ***   at top-level: alginv(A,1)
  ***                 ^-----------
  *** alginv: incorrect type in alg_model (t_INT).
  ***   at top-level: ...;PR=idealprimedec(K,2);A=alginit(K,[3,[PR,[1]
  ***                                             ^--------------------
  *** alginit: domain error in checkhasse: Hasse invariant at real place [must be 0 or 1/2] != 0
  ***   at top-level: ...;P3=idealprimedec(K,3);A=alginit(K,[3,[concat
  ***                                             ^--------------------
  *** alginit: domain error in checkhasse: Hasse invariant at real place [must be 0 or 1/2] != 0
  ***   at top-level: algtensor(alginit(nf
  ***                 ^--------------------
  *** algtensor: inconsistent tensor product [not the same center] t_VEC (11 elts) , t_VEC (11 elts).
  ***   at top-level: algtensor(alginit(nf
  ***                 ^--------------------
  *** algtensor: sorry, tensor of cylic algebras of non-coprime degrees is not yet implemented.
  ***   at top-level: alginit(nf,[2,[[p2,p
  ***                 ^--------------------
  *** alginit: error in checkhasse [duplicate prime ideal].
  ***   at top-level: alginit(nf,[2,[[p2,p
  ***                 ^--------------------
  *** alginit: domain error in checkhasse [hi should have r1 components]: #hi != 1
  ***   at top-level: alginit(nf,[2,[[p2,p
  ***                 ^--------------------
  *** alginit: incorrect type in Hasse invariant (t_VEC).
  ***   at top-level: alginit(nf,[2,[0,[1/
  ***                 ^--------------------
  *** alginit: incorrect type in Hasse invariant (t_VEC).
  ***   at top-level: alginit(nf,[2,[[p2,p
  ***                 ^--------------------
  *** alginit: incorrect type in Hasse invariant (t_INT).
  ***   at top-level: alginit(nf,[2,[[p2,p
  ***                 ^--------------------
  *** alginit: inconsistent dimensions in checkhasse [Lpr and Lh should have same length].
  ***   at top-level: alginit(nf,[2,[[p2,p
  ***                 ^--------------------
  *** alginit: domain error in hasseconvert [degree should be a denominator of the invariant]: denom(h) ndiv 2
1/2
0
3/4
0
1/4
1/2
2
1
4
1
4
2
4
0
0
1
0
1
0
1
0
1
0
1
0
0
0
1
0
1
0
1
1
1
[1, [2, [2, 0, 0]~, 1, 3, 1], [5, [2, 0, 1]~, 1, 1, [-1, 2, -3; 1, -2, -2; -
2, -1, -1]], [5, [-1, 1, -2]~, 1, 2, [2, -1, 1; 0, 2, 1; 1, 0, 2]]]
 
1/2
0
0
1/2
0
2
1
1
2
1
2
0
0
0
0
0
0
0
1
1
0
1
0
1
0
0
1
0
1
[1, [5, [2, 0, 1]~, 1, 1, [-1, 2, -3; 1, -2, -2; -2, -1, -1]]]
 
0
0
0
0
1
1
1
1
1
0
0
0
0
0
1
1
1
1
1
0
0
0
0
0
[]
Hasse inv 0 bug
3
9
1
0
[2, 0, 0, 2, 0, 0, 3, 0, 0]~
[0, 0, 0, -2, 0, 0, -3, 0, 0]~
[0, 0, 0, 0, 0, 0, 0, 0, 0]~
trivial tensor product
1
1
splitting a nasty commutative algebra
1
1
1
1
non associative algebra
0
csa without maximal order
nfgrunwaldwang SEGV #1669
x^2 + Mod(-17, y)
  ***   at top-level: nfgrunwaldwang(nfini
  ***                 ^--------------------
  *** nfgrunwaldwang: incorrect priority in nfgrunwaldwang: variable x >= x
simplify bug #1671
testing simplify: degree 1 cyclic over Q
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
testing simplify: degree 1 cyclic over Q(i)
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
testing simplify: degree 1 csa over Q
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
testing simplify: degree 1 csa over Q(i)
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
testing simplify: quatalg over Q(s5)
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
testing simplify: quatalg csa over Q
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
Total time spent: 7968
